// Code generated by protoc-gen-go. DO NOT EDIT.
// source: math.proto

package mathpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message for Sum.
type SumRequest struct {
	FirstNum             int32    `protobuf:"varint,1,opt,name=first_num,json=firstNum,proto3" json:"first_num,omitempty"`
	SecondNum            int32    `protobuf:"varint,2,opt,name=second_num,json=secondNum,proto3" json:"second_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f139a3799a86a974, []int{0}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetFirstNum() int32 {
	if m != nil {
		return m.FirstNum
	}
	return 0
}

func (m *SumRequest) GetSecondNum() int32 {
	if m != nil {
		return m.SecondNum
	}
	return 0
}

// The response message for Sum.
type SumResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f139a3799a86a974, []int{1}
}

func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (m *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(m, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

// The request message for PrimeFactors.
type PrimeFactorsRequest struct {
	Num                  int64    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeFactorsRequest) Reset()         { *m = PrimeFactorsRequest{} }
func (m *PrimeFactorsRequest) String() string { return proto.CompactTextString(m) }
func (*PrimeFactorsRequest) ProtoMessage()    {}
func (*PrimeFactorsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f139a3799a86a974, []int{2}
}

func (m *PrimeFactorsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeFactorsRequest.Unmarshal(m, b)
}
func (m *PrimeFactorsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeFactorsRequest.Marshal(b, m, deterministic)
}
func (m *PrimeFactorsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeFactorsRequest.Merge(m, src)
}
func (m *PrimeFactorsRequest) XXX_Size() int {
	return xxx_messageInfo_PrimeFactorsRequest.Size(m)
}
func (m *PrimeFactorsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeFactorsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeFactorsRequest proto.InternalMessageInfo

func (m *PrimeFactorsRequest) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

// The response message for PrimeFactors.
type PrimeFactorsResponse struct {
	Result               int64    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeFactorsResponse) Reset()         { *m = PrimeFactorsResponse{} }
func (m *PrimeFactorsResponse) String() string { return proto.CompactTextString(m) }
func (*PrimeFactorsResponse) ProtoMessage()    {}
func (*PrimeFactorsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f139a3799a86a974, []int{3}
}

func (m *PrimeFactorsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeFactorsResponse.Unmarshal(m, b)
}
func (m *PrimeFactorsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeFactorsResponse.Marshal(b, m, deterministic)
}
func (m *PrimeFactorsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeFactorsResponse.Merge(m, src)
}
func (m *PrimeFactorsResponse) XXX_Size() int {
	return xxx_messageInfo_PrimeFactorsResponse.Size(m)
}
func (m *PrimeFactorsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeFactorsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeFactorsResponse proto.InternalMessageInfo

func (m *PrimeFactorsResponse) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

// The request message for Average.
type AverageRequest struct {
	Num                  int32    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AverageRequest) Reset()         { *m = AverageRequest{} }
func (m *AverageRequest) String() string { return proto.CompactTextString(m) }
func (*AverageRequest) ProtoMessage()    {}
func (*AverageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f139a3799a86a974, []int{4}
}

func (m *AverageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AverageRequest.Unmarshal(m, b)
}
func (m *AverageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AverageRequest.Marshal(b, m, deterministic)
}
func (m *AverageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AverageRequest.Merge(m, src)
}
func (m *AverageRequest) XXX_Size() int {
	return xxx_messageInfo_AverageRequest.Size(m)
}
func (m *AverageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AverageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AverageRequest proto.InternalMessageInfo

func (m *AverageRequest) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

// The response message for Average.
type AverageResponse struct {
	Result               float64  `protobuf:"fixed64,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AverageResponse) Reset()         { *m = AverageResponse{} }
func (m *AverageResponse) String() string { return proto.CompactTextString(m) }
func (*AverageResponse) ProtoMessage()    {}
func (*AverageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f139a3799a86a974, []int{5}
}

func (m *AverageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AverageResponse.Unmarshal(m, b)
}
func (m *AverageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AverageResponse.Marshal(b, m, deterministic)
}
func (m *AverageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AverageResponse.Merge(m, src)
}
func (m *AverageResponse) XXX_Size() int {
	return xxx_messageInfo_AverageResponse.Size(m)
}
func (m *AverageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AverageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AverageResponse proto.InternalMessageInfo

func (m *AverageResponse) GetResult() float64 {
	if m != nil {
		return m.Result
	}
	return 0
}

// The request message for Maximum.
type MaximumRequest struct {
	Num                  int32    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaximumRequest) Reset()         { *m = MaximumRequest{} }
func (m *MaximumRequest) String() string { return proto.CompactTextString(m) }
func (*MaximumRequest) ProtoMessage()    {}
func (*MaximumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f139a3799a86a974, []int{6}
}

func (m *MaximumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaximumRequest.Unmarshal(m, b)
}
func (m *MaximumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaximumRequest.Marshal(b, m, deterministic)
}
func (m *MaximumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaximumRequest.Merge(m, src)
}
func (m *MaximumRequest) XXX_Size() int {
	return xxx_messageInfo_MaximumRequest.Size(m)
}
func (m *MaximumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MaximumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MaximumRequest proto.InternalMessageInfo

func (m *MaximumRequest) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

// The response message for Maximum.
type MaximumResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaximumResponse) Reset()         { *m = MaximumResponse{} }
func (m *MaximumResponse) String() string { return proto.CompactTextString(m) }
func (*MaximumResponse) ProtoMessage()    {}
func (*MaximumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f139a3799a86a974, []int{7}
}

func (m *MaximumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaximumResponse.Unmarshal(m, b)
}
func (m *MaximumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaximumResponse.Marshal(b, m, deterministic)
}
func (m *MaximumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaximumResponse.Merge(m, src)
}
func (m *MaximumResponse) XXX_Size() int {
	return xxx_messageInfo_MaximumResponse.Size(m)
}
func (m *MaximumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MaximumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MaximumResponse proto.InternalMessageInfo

func (m *MaximumResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "math.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "math.SumResponse")
	proto.RegisterType((*PrimeFactorsRequest)(nil), "math.PrimeFactorsRequest")
	proto.RegisterType((*PrimeFactorsResponse)(nil), "math.PrimeFactorsResponse")
	proto.RegisterType((*AverageRequest)(nil), "math.AverageRequest")
	proto.RegisterType((*AverageResponse)(nil), "math.AverageResponse")
	proto.RegisterType((*MaximumRequest)(nil), "math.MaximumRequest")
	proto.RegisterType((*MaximumResponse)(nil), "math.MaximumResponse")
}

func init() { proto.RegisterFile("math.proto", fileDescriptor_f139a3799a86a974) }

var fileDescriptor_f139a3799a86a974 = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xcb, 0x4b, 0xf3, 0x40,
	0x14, 0xc5, 0xbf, 0xf9, 0xd2, 0xe7, 0x55, 0xb4, 0x5e, 0xab, 0x68, 0x44, 0x90, 0x01, 0xb1, 0x82,
	0x84, 0xa2, 0x3b, 0x71, 0xa3, 0x0b, 0xd1, 0x45, 0x8b, 0xa4, 0x3b, 0x37, 0x92, 0xd6, 0xd1, 0x06,
	0x9c, 0x24, 0xce, 0x43, 0xfc, 0xd7, 0xdd, 0x49, 0x26, 0x99, 0x34, 0x29, 0x83, 0xbb, 0xc9, 0x3d,
	0xe7, 0xfc, 0x86, 0x7b, 0x32, 0x00, 0x3c, 0x52, 0xcb, 0x20, 0x13, 0xa9, 0x4a, 0xb1, 0x95, 0x9f,
	0xe9, 0x03, 0xc0, 0x4c, 0xf3, 0x90, 0x7d, 0x6a, 0x26, 0x15, 0x1e, 0x41, 0xff, 0x2d, 0x16, 0x52,
	0xbd, 0x24, 0x9a, 0x1f, 0x90, 0x13, 0x32, 0x6a, 0x87, 0x3d, 0x33, 0x98, 0x6a, 0x8e, 0xc7, 0x00,
	0x92, 0x2d, 0xd2, 0xe4, 0xd5, 0xa8, 0xff, 0x8d, 0xda, 0x2f, 0x26, 0x53, 0xcd, 0xe9, 0x29, 0x6c,
	0x18, 0x92, 0xcc, 0xd2, 0x44, 0x32, 0xdc, 0x87, 0x8e, 0x60, 0x52, 0x7f, 0xa8, 0x92, 0x53, 0x7e,
	0xd1, 0x33, 0xd8, 0x7d, 0x12, 0x31, 0x67, 0xf7, 0xd1, 0x42, 0xa5, 0x42, 0xda, 0x9b, 0x07, 0xe0,
	0xd9, 0x3b, 0xbd, 0x30, 0x3f, 0xd2, 0x00, 0x86, 0x4d, 0xa3, 0x13, 0xec, 0x55, 0x60, 0x0a, 0x5b,
	0xb7, 0x5f, 0x4c, 0x44, 0xef, 0xcc, 0xc1, 0x6c, 0x17, 0xcc, 0x73, 0xd8, 0xae, 0x3c, 0x4e, 0x1c,
	0xa9, 0xe3, 0x26, 0xd1, 0x77, 0xcc, 0x57, 0xe5, 0x38, 0x71, 0x95, 0xe7, 0xef, 0xb5, 0x2f, 0x7f,
	0x08, 0xb4, 0x26, 0x91, 0x5a, 0xe2, 0x05, 0x78, 0x33, 0xcd, 0x71, 0x10, 0x98, 0x5f, 0xb1, 0xea,
	0xde, 0xdf, 0xa9, 0x4d, 0x0a, 0x18, 0xfd, 0x87, 0x8f, 0xb0, 0x59, 0x2f, 0x01, 0x0f, 0x0b, 0x93,
	0xa3, 0x41, 0xdf, 0x77, 0x49, 0x16, 0x34, 0x26, 0x78, 0x0d, 0xdd, 0x72, 0x77, 0x1c, 0x16, 0xd6,
	0x66, 0x5d, 0xfe, 0xde, 0xda, 0xd4, 0x66, 0x47, 0x04, 0x6f, 0xa0, 0x5b, 0x2e, 0x6a, 0xb3, 0xcd,
	0x6e, 0x6c, 0x76, 0xad, 0x8d, 0x3c, 0x3b, 0x26, 0x77, 0xbd, 0xe7, 0x4e, 0xae, 0x66, 0xf3, 0x79,
	0xc7, 0x3c, 0xbd, 0xab, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x18, 0x37, 0x9e, 0xce, 0x88, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MathClient is the client API for Math service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MathClient interface {
	// Sum is unary RPC.
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	// PrimeFactors is server-side streaming RPC
	PrimeFactors(ctx context.Context, in *PrimeFactorsRequest, opts ...grpc.CallOption) (Math_PrimeFactorsClient, error)
	// Average is client-side streaming RPC
	Average(ctx context.Context, opts ...grpc.CallOption) (Math_AverageClient, error)
	// Maximum is bi-directional streaming RPC
	Maximum(ctx context.Context, opts ...grpc.CallOption) (Math_MaximumClient, error)
}

type mathClient struct {
	cc *grpc.ClientConn
}

func NewMathClient(cc *grpc.ClientConn) MathClient {
	return &mathClient{cc}
}

func (c *mathClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/math.Math/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mathClient) PrimeFactors(ctx context.Context, in *PrimeFactorsRequest, opts ...grpc.CallOption) (Math_PrimeFactorsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Math_serviceDesc.Streams[0], "/math.Math/PrimeFactors", opts...)
	if err != nil {
		return nil, err
	}
	x := &mathPrimeFactorsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Math_PrimeFactorsClient interface {
	Recv() (*PrimeFactorsResponse, error)
	grpc.ClientStream
}

type mathPrimeFactorsClient struct {
	grpc.ClientStream
}

func (x *mathPrimeFactorsClient) Recv() (*PrimeFactorsResponse, error) {
	m := new(PrimeFactorsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *mathClient) Average(ctx context.Context, opts ...grpc.CallOption) (Math_AverageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Math_serviceDesc.Streams[1], "/math.Math/Average", opts...)
	if err != nil {
		return nil, err
	}
	x := &mathAverageClient{stream}
	return x, nil
}

type Math_AverageClient interface {
	Send(*AverageRequest) error
	CloseAndRecv() (*AverageResponse, error)
	grpc.ClientStream
}

type mathAverageClient struct {
	grpc.ClientStream
}

func (x *mathAverageClient) Send(m *AverageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *mathAverageClient) CloseAndRecv() (*AverageResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AverageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *mathClient) Maximum(ctx context.Context, opts ...grpc.CallOption) (Math_MaximumClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Math_serviceDesc.Streams[2], "/math.Math/Maximum", opts...)
	if err != nil {
		return nil, err
	}
	x := &mathMaximumClient{stream}
	return x, nil
}

type Math_MaximumClient interface {
	Send(*MaximumRequest) error
	Recv() (*MaximumResponse, error)
	grpc.ClientStream
}

type mathMaximumClient struct {
	grpc.ClientStream
}

func (x *mathMaximumClient) Send(m *MaximumRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *mathMaximumClient) Recv() (*MaximumResponse, error) {
	m := new(MaximumResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MathServer is the server API for Math service.
type MathServer interface {
	// Sum is unary RPC.
	Sum(context.Context, *SumRequest) (*SumResponse, error)
	// PrimeFactors is server-side streaming RPC
	PrimeFactors(*PrimeFactorsRequest, Math_PrimeFactorsServer) error
	// Average is client-side streaming RPC
	Average(Math_AverageServer) error
	// Maximum is bi-directional streaming RPC
	Maximum(Math_MaximumServer) error
}

// UnimplementedMathServer can be embedded to have forward compatible implementations.
type UnimplementedMathServer struct {
}

func (*UnimplementedMathServer) Sum(ctx context.Context, req *SumRequest) (*SumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedMathServer) PrimeFactors(req *PrimeFactorsRequest, srv Math_PrimeFactorsServer) error {
	return status.Errorf(codes.Unimplemented, "method PrimeFactors not implemented")
}
func (*UnimplementedMathServer) Average(srv Math_AverageServer) error {
	return status.Errorf(codes.Unimplemented, "method Average not implemented")
}
func (*UnimplementedMathServer) Maximum(srv Math_MaximumServer) error {
	return status.Errorf(codes.Unimplemented, "method Maximum not implemented")
}

func RegisterMathServer(s *grpc.Server, srv MathServer) {
	s.RegisterService(&_Math_serviceDesc, srv)
}

func _Math_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MathServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/math.Math/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MathServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Math_PrimeFactors_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeFactorsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MathServer).PrimeFactors(m, &mathPrimeFactorsServer{stream})
}

type Math_PrimeFactorsServer interface {
	Send(*PrimeFactorsResponse) error
	grpc.ServerStream
}

type mathPrimeFactorsServer struct {
	grpc.ServerStream
}

func (x *mathPrimeFactorsServer) Send(m *PrimeFactorsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Math_Average_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MathServer).Average(&mathAverageServer{stream})
}

type Math_AverageServer interface {
	SendAndClose(*AverageResponse) error
	Recv() (*AverageRequest, error)
	grpc.ServerStream
}

type mathAverageServer struct {
	grpc.ServerStream
}

func (x *mathAverageServer) SendAndClose(m *AverageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *mathAverageServer) Recv() (*AverageRequest, error) {
	m := new(AverageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Math_Maximum_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MathServer).Maximum(&mathMaximumServer{stream})
}

type Math_MaximumServer interface {
	Send(*MaximumResponse) error
	Recv() (*MaximumRequest, error)
	grpc.ServerStream
}

type mathMaximumServer struct {
	grpc.ServerStream
}

func (x *mathMaximumServer) Send(m *MaximumResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *mathMaximumServer) Recv() (*MaximumRequest, error) {
	m := new(MaximumRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Math_serviceDesc = grpc.ServiceDesc{
	ServiceName: "math.Math",
	HandlerType: (*MathServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _Math_Sum_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeFactors",
			Handler:       _Math_PrimeFactors_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Average",
			Handler:       _Math_Average_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "Maximum",
			Handler:       _Math_Maximum_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "math.proto",
}
